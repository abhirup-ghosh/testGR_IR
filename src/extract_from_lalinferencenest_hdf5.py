#!/usr/bin/env python
"""
Script to extract posterior samples and metadata from HDF5 files generated by lalinference_nest. Works for both files in engine and posterior_samples.

Archisman Ghosh, 2016-10-11
"""

import h5py

def get_metadata(filename):
  """
  Returns a python dictionary with the metadata. Keys are:
  
  'log_noise_evidence'
  'number_live_points'
  'log_evidence'
  'information_nats'
  'log_bayes_factor'
  'log_max_likelihood'
  'log_prior_volume'
  
  Input: HDF5 filename with path

  Usage (example):
  
  posmetadata = get_metadata(posfilename)
  print posmetadata.keys()
  log_bayes_factor = posmetadata['log_bayes_factor']
  """
  fileobject = h5py.File(filename, 'r')
  return dict(fileobject.get('lalinference/lalinference_nest').attrs.items())

def get_samples(filename, resume=False):
  """
  Returns a numpy record array with the samples.
  
  Input: HDF5 filename with path

  Usage (example):
  
  possamp = get_samples(posfilename)
  print possamp.dtype.names
  mc_arr = possamp['mc']
  """
  fileobject = h5py.File(filename, 'r')
  if not resume:
    sampletype, = fileobject.get('lalinference/lalinference_nest').keys()
    return fileobject.get('lalinference/lalinference_nest/%s'%(sampletype)).value
  else:
    return fileobject.get('lalinferencenest_checkpoint/past_chain').value

